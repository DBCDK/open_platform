<?php

/**
 * @file
 * Test case for recommender.
 */

class openPlatformTestCase extends DrupalWebTestCase {

  protected $profile = 'testing';

  public static function getInfo() {
    return array(
      'name' => t('Open Platform Client : Recommender request test'),
      'description' => t('Check if parsing a recommenderRequest return a valid array of recommendations'),
      'group' => t('Bibliotek.dk - Open Platform Client'),
    );
  }

  public function setUp() {
    $this->_set_webservice_urls();
    parent::setUp(
      array(
        'open_platform_client',
        'open_platform_mockup',
      )
    );
  }

  public function test_runner() {
    $this->_test_open_recommender_parse_response();
  }
  
  public function _test_open_recommender_parse_response() {
    $pids = array('foo', 'bar');
    $this->_set_webservice_urls();
    try {
      // $response = open_platform_client_recommender_request($pids, 10);
      $response = file_get_contents(drupal_get_path('module', 'open_platform_mockup') . '/response/recommender/response.200.json');
      open_platform_client_parse_response('recommender', $response);
      $this->verbose(print_r($response,1));
      $this->assertTrue($response[0]->title == 'Harry Potter', 'First element title is "Harry Potter"');
      $this->assertTrue($response[0]->pid == '870970-basis:22629344', 'First element pid is "870970-basis:22629344"');
      $this->assertTrue(sizeof($response) == 4, '4 elements in response.');
    } catch (Exception $e) {
      $this->fail(print_r($e->getMessage(),1));
    }
    $this->verbose(variable_get(
      'openplatform_token_url',
      'bah! humbug!'
    ));
    
  }
  
  private function _set_webservice_urls() {
    variable_set(
      'openplatform_url', 
      $this->getAbsoluteUrl('/mockups/open_platform_mockup/request/')
    );
    variable_set(
      'openplatform_recommender_url', 
      $this->getAbsoluteUrl('/mockups/open_platform_mockup/request/recommender/200')
    );
    variable_set(
      'openplatform_token_url',
      $this->getAbsoluteUrl('/mockups/open_platform_mockup/request/authenticate/200')
    );
    variable_set('open_platform_client_access_token', 'token');
  }
  
}
